[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lsp-cli-test-app"
version = "1.0.0"
description = "Test application for LSP CLI Python support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Test Suite", email = "test@example.com"}
]
maintainers = [
    {name = "LSP CLI Team", email = "lsp-cli@example.com"}
]
keywords = ["lsp", "language-server", "python", "testing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Testing",
    "Typing :: Typed"
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "click>=8.1.0",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.28.0",
    "redis>=4.6.0",
    "asyncio-mqtt>=0.13.0",
    "aiofiles>=23.1.0",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "colorlog>=6.7.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.1.0",
    "black>=23.3.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "isort>=5.12.0"
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.2.0"
]
testing = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "coverage[toml]>=7.2.0"
]

[project.urls]
Homepage = "https://github.com/example/lsp-cli-test-app"
Documentation = "https://lsp-cli-test-app.readthedocs.io/"
Repository = "https://github.com/example/lsp-cli-test-app.git"
"Bug Tracker" = "https://github.com/example/lsp-cli-test-app/issues"
Changelog = "https://github.com/example/lsp-cli-test-app/blob/main/CHANGELOG.md"

[project.scripts]
lsp-test-app = "src.main:main"

[project.entry-points."console_scripts"]
lsp-test-cli = "src.main:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
"src" = ["*.json", "*.yaml", "*.yml", "*.toml"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "asyncio_mqtt.*",
    "colorlog.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".eggs"]

[tool.pylint.messages_control]
disable = ["C0330", "C0326"]

[tool.pylint.format]
max-line-length = "88"